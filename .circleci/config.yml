version: 2.1

commands:
  tests:
    steps:
      - checkout
      - run: npm i
      - run: npm run unit

jobs:
  test_node_10:
    docker:
      - image: circleci/node:10
    steps:
      - tests
  test_node_12:
    docker:
      - image: circleci/node:12
    steps:
      - tests
  test_node_latest:
    docker:
      - image: circleci/node:latest
    steps:
      - tests
  test_browsers:
    docker:
      - image: circleci/node:latest-browsers
    steps:
      - checkout
      - run: npm i
      - run: npm run browser
  lint_sort_and_types:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: npm i
      - run: npm run lint -- --plugin log
      - run: npm run sort && git diff --quiet || exit 1
      - run: npm run ts
  publish:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Stop if remote tag already exists
          command: |
            [ -z "$(git ls-remote --tags origin | grep -F $(cat package.json | jq '.version' -r) | tr -d '\n')" ] || circleci step halt
      - run:
          name: Set git user
          command: |
            git config --global user.name "$(git show -s --format=%an)"
            git config --global user.email "$(git show -s --format=%ae)"
      - run:
          name: Add git tag
          command: git tag -a "v$(cat package.json | jq ".version" -r)" -m "$(git show -s --format=%B | tr -d '\n')"
      - run: git push origin --tags
      - run:
          name: Add publish token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run: npm publish
  pages:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: npm i
      - run: npm run build
      - run:
          name: Copy circleci config
          command: cp -r .circleci playground/dist/
      - run:
          name: Post to gh-pages
          command: curl ci-cd.net/v1/gh/pages | bash -s playground/dist/.
  periodic:
    docker:
      - image: circleci/node:latest-browsers
    steps:
      - checkout
      - run: npm i
      - run: |
            npm t || curl --request POST \
              --url https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues \
              --header 'authorization: Bearer ${GITHUB_TOKEN}' \
              --header 'content-type: application/json' \
              --data '{
                  "title": "Automated issue for failing periodic tests",
                  "body": "This issue is automatically created. The tests are failing on branch ${CIRCLE_BRANCH}",
                  "assignees": [ "omrilotan" ],
                  "labels": [ "automated", "maintenance" ]
                }'

workflows:
  version: 2.1
  test:
    jobs:
      - test_node_10
      - test_node_12
      - test_node_latest
      - test_browsers
      - lint_sort_and_types
      - publish:
          requires:
            - test_node_10
            - test_node_12
            - test_node_latest
            - test_browsers
            - lint_sort_and_types
          filters:
            branches:
              only:
                - master
      - pages:
          requires:
            - publish
  scheduled:
    jobs:
      - periodic
    triggers:
      - schedule:
          # Every Monday at 09:00
          cron: "0 9 * * 1"
          filters:
            branches:
              only:
                - master
